//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18034
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace OpenOptions.dnaFusion.Flex.V1.Cameras {
    using System;
    using CookComputing.XmlRpc;
    
    [System.Reflection.ObfuscationAttribute(Exclude=true)]
    public enum PTZMovement : int {
        Down = 0,
        DownLeft = 1,
        DownRight = 2,
        Home = 3,
        Left = 4,
        Right = 5,
        Up = 6,
        UpLeft = 7,
        UpRight = 8,
        ZoomIn = 9,
        ZoomOut = 10,
    }
    [System.Reflection.ObfuscationAttribute(Exclude=true)]
    public partial class XmlRpcProxy {
        public static T Create<T>(string url)
            where T : CookComputing.XmlRpc.IXmlRpcProxy {
            T result = CookComputing.XmlRpc.XmlRpcProxyGen.Create<T>();
            result.Url = url;
            return result;
        }
    }
    [System.Reflection.ObfuscationAttribute(Exclude=true)]
    [System.SerializableAttribute()]
    public partial class ComplexType : System.ComponentModel.INotifyPropertyChanged {
        public ComplexType() {
        }
        [field: System.NonSerialized()]
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        protected virtual void TriggerPropertyChanged(string propertyName) {
            if ((PropertyChanged != null)) {
                PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    [XmlRpcMissingMapping(CookComputing.XmlRpc.MappingAction.Ignore)]
    [System.SerializableAttribute()]
    [System.Reflection.ObfuscationAttribute(Exclude=true)]
    public partial class NameValue : ComplexType {
        public const string FlexVersion = "1.15";
        public const string FlexLibrary = "OpenOptions.dnaFusion.Flex.Common";
        private string @__Name;
        private string @__Value;
        public virtual string Name {
            get {
                return @__Name;
            }
            set {
                if ((this.@__Name != value)) {
                    @__Name = value;
                    this.TriggerPropertyChanged("Name");
                }
            }
        }
        public virtual string Value {
            get {
                return @__Value;
            }
            set {
                if ((this.@__Value != value)) {
                    @__Value = value;
                    this.TriggerPropertyChanged("Value");
                }
            }
        }
    }
    [XmlRpcMissingMapping(CookComputing.XmlRpc.MappingAction.Ignore)]
    [System.SerializableAttribute()]
    [System.Reflection.ObfuscationAttribute(Exclude=true)]
    public partial class DNACamera : ComplexType {
        public const string FlexVersion = "1.15";
        public const string FlexLibrary = "OpenOptions.dnaFusion.Flex.V1.Cameras";
        private int @__CameraNumber;
        private string @__Description;
        private int @__Index;
        private long @__PackedAddress;
        private bool @__PTZControl;
        private int @__ServerIndex;
        public virtual int CameraNumber {
            get {
                return @__CameraNumber;
            }
            set {
                if ((this.@__CameraNumber != value)) {
                    @__CameraNumber = value;
                    this.TriggerPropertyChanged("CameraNumber");
                }
            }
        }
        public virtual string Description {
            get {
                return @__Description;
            }
            set {
                if ((this.@__Description != value)) {
                    @__Description = value;
                    this.TriggerPropertyChanged("Description");
                }
            }
        }
        public virtual int Index {
            get {
                return @__Index;
            }
            set {
                if ((this.@__Index != value)) {
                    @__Index = value;
                    this.TriggerPropertyChanged("Index");
                }
            }
        }
        public virtual long PackedAddress {
            get {
                return @__PackedAddress;
            }
            set {
                if ((this.@__PackedAddress != value)) {
                    @__PackedAddress = value;
                    this.TriggerPropertyChanged("PackedAddress");
                }
            }
        }
        public virtual bool PTZControl {
            get {
                return @__PTZControl;
            }
            set {
                if ((this.@__PTZControl != value)) {
                    @__PTZControl = value;
                    this.TriggerPropertyChanged("PTZControl");
                }
            }
        }
        public virtual int ServerIndex {
            get {
                return @__ServerIndex;
            }
            set {
                if ((this.@__ServerIndex != value)) {
                    @__ServerIndex = value;
                    this.TriggerPropertyChanged("ServerIndex");
                }
            }
        }
    }
    [XmlRpcMissingMapping(CookComputing.XmlRpc.MappingAction.Ignore)]
    [System.SerializableAttribute()]
    [System.Reflection.ObfuscationAttribute(Exclude=true)]
    public partial class DNADVRServer : ComplexType {
        public const string FlexVersion = "1.15";
        public const string FlexLibrary = "OpenOptions.dnaFusion.Flex.V1.Cameras";
        private int @__Index;
        private string @__Description;
        private string @__IPAddress;
        public virtual int Index {
            get {
                return @__Index;
            }
            set {
                if ((this.@__Index != value)) {
                    @__Index = value;
                    this.TriggerPropertyChanged("Index");
                }
            }
        }
        public virtual string Description {
            get {
                return @__Description;
            }
            set {
                if ((this.@__Description != value)) {
                    @__Description = value;
                    this.TriggerPropertyChanged("Description");
                }
            }
        }
        public virtual string IPAddress {
            get {
                return @__IPAddress;
            }
            set {
                if ((this.@__IPAddress != value)) {
                    @__IPAddress = value;
                    this.TriggerPropertyChanged("IPAddress");
                }
            }
        }
    }
    [System.Reflection.ObfuscationAttribute(Exclude=true)]
    public interface IAFlexService : CookComputing.XmlRpc.IXmlRpcProxy {
    }
    [System.Reflection.ObfuscationAttribute(Exclude=true)]
    public interface IFlexPermissions : IAFlexService {
        [XmlRpcMethod("FlexPermissions.CanInvoke")]
        string[] CanInvoke(string apiKey);
        [XmlRpcMethod("FlexPermissions.CanNotInvoke")]
        string[] CanNotInvoke(string apiKey);
    }
    [System.Reflection.ObfuscationAttribute(Exclude=true)]
    public interface IFlexV1_Camera : IAFlexService {
        [XmlRpcMethod("FlexV1_Camera.FindCameras")]
        DNACamera[] FindCameras(string apiKey);
        [XmlRpcMethod("FlexV1_Camera.FindServers")]
        DNADVRServer[] FindServers(string apiKey);
        [XmlRpcMethod("FlexV1_Camera.MoveCamera")]
        [XmlRpcEnumMapping(CookComputing.XmlRpc.EnumMapping.String)]
        void MoveCamera(string apiKey, int camera, PTZMovement movement);
    }
    [System.Reflection.ObfuscationAttribute(Exclude=true)]
    public partial class AFlexService : CookComputing.XmlRpc.XmlRpcClientProtocol {
        public const string FlexVersion = "1.15";
        public const string FlexLibrary = "OpenOptions.dnaFusion.Flex.Common";
    }
    [System.Reflection.ObfuscationAttribute(Exclude=true)]
    public partial class FlexPermissions : AFlexService {
        public const string FlexVersion = "1.15";
        public const string FlexLibrary = "OpenOptions.dnaFusion.Flex.Common";
        [XmlRpcMethod("FlexPermissions.CanInvoke")]
        public virtual string[] CanInvoke(string apiKey) {
            return ((string[])(this.Invoke(this, "CanInvoke", apiKey)));
        }
        public virtual System.IAsyncResult BeginCanInvoke(string apiKey, System.AsyncCallback @__Callback, object @__UserData) {
            return this.BeginInvoke("CanInvoke", new object[] {
                        apiKey}, this, @__Callback, @__UserData);
        }
        public virtual string[] EndCanInvoke(System.IAsyncResult asyncResult) {
            return this.EndInvoke<string[]>(asyncResult);
        }
        [XmlRpcMethod("FlexPermissions.CanNotInvoke")]
        public virtual string[] CanNotInvoke(string apiKey) {
            return ((string[])(this.Invoke(this, "CanNotInvoke", apiKey)));
        }
        public virtual System.IAsyncResult BeginCanNotInvoke(string apiKey, System.AsyncCallback @__Callback, object @__UserData) {
            return this.BeginInvoke("CanNotInvoke", new object[] {
                        apiKey}, this, @__Callback, @__UserData);
        }
        public virtual string[] EndCanNotInvoke(System.IAsyncResult asyncResult) {
            return this.EndInvoke<string[]>(asyncResult);
        }
    }
    [System.Reflection.ObfuscationAttribute(Exclude=true)]
    public partial class FlexV1_Camera : AFlexService {
        public const string FlexVersion = "1.15";
        public const string FlexLibrary = "OpenOptions.dnaFusion.Flex.V1.Cameras";
        [XmlRpcMethod("FlexV1_Camera.FindCameras")]
        public virtual DNACamera[] FindCameras(string apiKey) {
            return ((DNACamera[])(this.Invoke(this, "FindCameras", apiKey)));
        }
        public virtual System.IAsyncResult BeginFindCameras(string apiKey, System.AsyncCallback @__Callback, object @__UserData) {
            return this.BeginInvoke("FindCameras", new object[] {
                        apiKey}, this, @__Callback, @__UserData);
        }
        public virtual DNACamera[] EndFindCameras(System.IAsyncResult asyncResult) {
            return this.EndInvoke<DNACamera[]>(asyncResult);
        }
        [XmlRpcMethod("FlexV1_Camera.FindServers")]
        public virtual DNADVRServer[] FindServers(string apiKey) {
            return ((DNADVRServer[])(this.Invoke(this, "FindServers", apiKey)));
        }
        public virtual System.IAsyncResult BeginFindServers(string apiKey, System.AsyncCallback @__Callback, object @__UserData) {
            return this.BeginInvoke("FindServers", new object[] {
                        apiKey}, this, @__Callback, @__UserData);
        }
        public virtual DNADVRServer[] EndFindServers(System.IAsyncResult asyncResult) {
            return this.EndInvoke<DNADVRServer[]>(asyncResult);
        }
        [XmlRpcMethod("FlexV1_Camera.MoveCamera")]
        [XmlRpcEnumMapping(CookComputing.XmlRpc.EnumMapping.String)]
        public virtual void MoveCamera(string apiKey, int camera, PTZMovement movement) {
            this.Invoke(this, "MoveCamera", apiKey, camera, movement);
        }
        public virtual System.IAsyncResult BeginMoveCamera(string apiKey, int camera, PTZMovement movement, System.AsyncCallback @__Callback, object @__UserData) {
            return this.BeginInvoke("MoveCamera", new object[] {
                        apiKey,
                        camera,
                        movement}, this, @__Callback, @__UserData);
        }
        public virtual void EndMoveCamera(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
    }
    [System.Reflection.ObfuscationAttribute(Exclude=true)]
    public interface IAFlexService_Async : CookComputing.XmlRpc.IXmlRpcProxy {
    }
    [System.Reflection.ObfuscationAttribute(Exclude=true)]
    public interface IFlexPermissions_Async : IAFlexService_Async {
        [XmlRpcBegin("FlexPermissions.CanInvoke")]
        System.IAsyncResult BeginCanInvoke(string apiKey, System.AsyncCallback @__Callback, object @__UserData);
        [XmlRpcEnd()]
        string[] EndCanInvoke(System.IAsyncResult @__AsyncResult);
        [XmlRpcBegin("FlexPermissions.CanNotInvoke")]
        System.IAsyncResult BeginCanNotInvoke(string apiKey, System.AsyncCallback @__Callback, object @__UserData);
        [XmlRpcEnd()]
        string[] EndCanNotInvoke(System.IAsyncResult @__AsyncResult);
    }
    [System.Reflection.ObfuscationAttribute(Exclude=true)]
    public interface IFlexV1_Camera_Async : IAFlexService_Async {
        [XmlRpcBegin("FlexV1_Camera.FindCameras")]
        System.IAsyncResult BeginFindCameras(string apiKey, System.AsyncCallback @__Callback, object @__UserData);
        [XmlRpcEnd()]
        DNACamera[] EndFindCameras(System.IAsyncResult @__AsyncResult);
        [XmlRpcBegin("FlexV1_Camera.FindServers")]
        System.IAsyncResult BeginFindServers(string apiKey, System.AsyncCallback @__Callback, object @__UserData);
        [XmlRpcEnd()]
        DNADVRServer[] EndFindServers(System.IAsyncResult @__AsyncResult);
        [XmlRpcBegin("FlexV1_Camera.MoveCamera")]
        [XmlRpcEnumMapping(CookComputing.XmlRpc.EnumMapping.String)]
        System.IAsyncResult BeginMoveCamera(string apiKey, int camera, PTZMovement movement, System.AsyncCallback @__Callback, object @__UserData);
        [XmlRpcEnd()]
        void EndMoveCamera(System.IAsyncResult @__AsyncResult);
    }
}
